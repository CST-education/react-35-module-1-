{"version":3,"sources":["components/Counter/Counter.module.scss","components/Widgets/WindowElem.js","components/Widgets/RemoveItem.js","components/Counter/Counter.js","App.js","index.js"],"names":["module","exports","GadgetWindow","unitRef","isOpen","toggleState","keydownHandler","handleClick","textObj","title","content","backBtn","deleteBtn","flipId","ref","tabIndex","undefined","role","className","onClick","onKeyDown","defaultProps","DeleteButton","state","props","createRef","setState","prev","current","focus","event","key","this","flipKey","spring","stagger","text","Component","Counter","counter","handleDecrement","handleIncrement","s","btn","decrementBtn","counterValue","incrementBtn","App","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a36b42e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__3nZje\",\"btn\":\"Counter_btn__2EzXp\",\"decrementBtn\":\"Counter_decrementBtn__3X5lO\",\"incrementBtn\":\"Counter_incrementBtn__3PjYC\",\"text\":\"Counter_text__3aEfb\",\"counterValue\":\"Counter_counterValue__1nJBK\"};","import { Flipped } from 'react-flip-toolkit';\nimport PropTypes from 'prop-types';\nexport function GadgetWindow({\n  unitRef,\n  isOpen,\n  toggleState,\n  keydownHandler,\n  handleClick,\n  textObj: { title, content, backBtn, deleteBtn },\n}) {\n  return (\n    <Flipped flipId=\"wrapper\">\n      <div\n        ref={unitRef}\n        // в тернарном операторе false заменен на undefined\n        tabIndex={isOpen ? undefined : 0}\n        role=\"dialog\"\n        className={`dialog animated-in`}\n        onClick={toggleState}\n        onKeyDown={keydownHandler}\n      >\n        <p className=\"title content\">{title}</p>\n        <p className=\"content\">{content}</p>\n        <button className=\"button secondary content\" onClick={handleClick}>\n          {backBtn}\n        </button>\n        <button className=\"button primary content\" onClick={handleClick}>\n          {deleteBtn}\n        </button>\n      </div>\n    </Flipped>\n  );\n}\n\nGadgetWindow.defaultProps = {\n  textObj: {\n    title: 'Delete this item?',\n    content:\n      'This operation will permenantly delete this item and all its dependencies. This actioncannot be undone',\n    backBtn: 'Oh no, bring me back',\n    deleteBtn: 'I understand, delete it',\n  },\n};\nGadgetWindow.propTypes = {\n  ref: PropTypes.any,\n  isOpen: PropTypes.bool,\n  toggleState: PropTypes.func,\n  keydownHandler: PropTypes.func,\n  handleClick: PropTypes.func,\n  textObj: PropTypes.shape({\n    title: PropTypes.string,\n    content: PropTypes.string,\n    backBtn: PropTypes.string,\n    deleteBtn: PropTypes.string,\n  }),\n};\n","import { Component, createRef } from 'react';\nimport { Flipper, Flipped } from 'react-flip-toolkit';\nimport './RemoveItem.scss';\nimport { GadgetWindow } from './WindowElem';\n\nexport class DeleteButton extends Component {\n  state = {\n    isOpen: this.props.isOpen,\n  };\n  // получаем доступ к текущему элементу через createRef()\n  ref = createRef();\n\n  // создаем метод изменения свойства видимости в стейте\n  toggleState = () => {\n    //  если текущее значение true выходим из метода\n    if (this.state.isOpen) return;\n    // изменяем стейт от предыдущего состояния\n    this.setState(prev => ({\n      isOpen: !prev.isOpen,\n    }));\n    // фокусируемся на текущем элементе\n    this.ref.current.focus();\n  };\n\n  keydownHandler = event => {\n    // при фокусе табом на кнопках виджета\n    // закрывает виджет по нажатию на 'Enter' || 'Escape'\n    if (event.key === 'Enter' || event.key === 'Escape') {\n      this.toggleState();\n    }\n  };\n\n  handleClick = () => this.setState({ isOpen: false });\n\n  render() {\n    // деструктуризировать стейт и методы\n    const { isOpen } = this.state;\n    const { ref, keydownHandler, toggleState, handleClick } = this;\n    return (\n      <Flipper flipKey={isOpen} spring=\"stiff\" stagger>\n        {isOpen ? (\n          <GadgetWindow\n            // переименовано имя пропа для передачи в компонент виджета ссылки на дом-узел\n            unitRef={ref}\n            isOpen={isOpen}\n            toggleState={toggleState}\n            keydownHandler={keydownHandler}\n            handleClick={handleClick}\n            textObj={this.props.text}\n          />\n        ) : (\n          <Flipped flipId=\"wrapper\">\n            <div\n              ref={ref}\n              tabIndex={0}\n              role=\"button\"\n              className=\"button primary\"\n              onClick={toggleState}\n              onKeyDown={keydownHandler}\n            >\n              <Flipped flipId=\"action\">\n                <span className=\"action\">Delete</span>\n              </Flipped>\n            </div>\n          </Flipped>\n        )}\n      </Flipper>\n    );\n  }\n}\n","import s from './Counter.module.scss';\nexport function Counter({ counter, handleDecrement, handleIncrement }) {\n  return (\n    <div className={s.counter}>\n      <button\n        className={`${s.btn} ${s.decrementBtn}`}\n        onClick={handleDecrement}\n      >\n        -\n      </button>\n      <p className={`${s.text} ${s.counterValue}`}>{counter}</p>\n      <button\n        className={`${s.btn} ${s.incrementBtn}`}\n        onClick={handleIncrement}\n      >\n        +\n      </button>\n    </div>\n  );\n}\n","import './App.scss';\nimport { Component } from 'react';\nimport { DeleteButton } from './components/Widgets/RemoveItem';\nimport { Counter } from './components/Counter/Counter';\n\nconst text = {\n  title: 'title-1',\n  content: 'content-1',\n  backBtn: 'go back',\n  deleteBtn: 'delete',\n};\n\nclass App extends Component {\n  state = {\n    counter: 0,\n    isOpen: false,\n  };\n\n  handleDecrement = () => {\n    // просто перепишем текущий стейт\n    // this.setState({\n    //   counter: this.state.counter - 1,\n    // })\n    // если нужно отталкиваться от предыдущего значения\n    // this.setState((prevState) => {\n    //   return {\n    //     counter: prevState.counter - 1,\n    //   }\n    // })\n    // или короче\n    if (this.state.counter > 0) {\n      this.setState(prevState => ({\n        counter: prevState.counter - 1,\n      }));\n    }\n  };\n  handleIncrement = () => {\n    this.setState(prevState => ({\n      counter: prevState.counter + 1,\n    }));\n  };\n\n  render() {\n    const { counter, isOpen } = this.state;\n    const { handleDecrement, handleIncrement } = this;\n    return (\n      <div className=\"App\">\n        <h1>FE-35</h1>\n        <DeleteButton isOpen={!isOpen} text={text} />\n        <DeleteButton isOpen={isOpen} />\n        <Counter\n          counter={counter}\n          handleDecrement={handleDecrement}\n          handleIncrement={handleIncrement}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n\n// click => onClick\n// submit => onSubmit\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}